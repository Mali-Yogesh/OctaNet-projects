# ATM Machine Simulation

# Importing the necessary module
import datetime

class ATM:
    def __init__(self, pin, balance=0):
        self.pin = pin
        self.balance = balance
        self.transaction_history = []

    def check_pin(self, entered_pin):
        """Checks if the entered PIN is correct."""
        return self.pin == entered_pin

    def get_balance(self):
        """Returns the current balance."""
        return self.balance

    def deposit(self, amount):
        """Deposits a specified amount into the account."""
        if amount > 0:
            self.balance += amount
            self.transaction_history.append((datetime.datetime.now(), f"Deposited: ${amount}"))
            return True
        else:
            return False

    def withdraw(self, amount):
        """Withdraws a specified amount from the account if sufficient balance is available."""
        if 0 < amount <= self.balance:
            self.balance -= amount
            self.transaction_history.append((datetime.datetime.now(), f"Withdrew: ${amount}"))
            return True
        else:
            return False

    def change_pin(self, old_pin, new_pin):
        """Changes the account PIN if the old PIN is correct."""
        if self.check_pin(old_pin):
            self.pin = new_pin
            self.transaction_history.append((datetime.datetime.now(), "PIN changed"))
            return True
        else:
            return False

    def get_transaction_history(self):
        """Returns the transaction history."""
        return self.transaction_history

# Simulating ATM usage
def atm_simulation():
    atm = ATM(pin=1234, balance=1000)  # Initialize the ATM with a default PIN and balance

    print("Welcome to the ATM!")
    entered_pin = int(input("Please enter your PIN: "))

    if not atm.check_pin(entered_pin):
        print("Invalid PIN! Exiting...")
        return

    while True:
        print("\n1. Balance Inquiry")
        print("\n2. Cash Withdrawal")
        print("\n3. Cash Deposit")
        print("\n4. PIN Change")
        print("\n5. Transaction History")
        print("\n6. Exit")
        
        choice = int(input("Select an option: "))

        if choice == 1:
            print(f"\nYour current balance is: ${atm.get_balance()}")

        elif choice == 2:
            amount = int(input("Enter amount to withdraw: "))
            if atm.withdraw(amount):
                print(f"\nYou have successfully withdrawn ${amount}. Your new balance is: ${atm.get_balance()}")
            else:
                print("\nInsufficient funds or invalid amount!")

        elif choice == 3:
            amount = int(input("Enter amount to deposit: "))
            if atm.deposit(amount):
                print(f"\nYou have successfully deposited ${amount}. Your new balance is: ${atm.get_balance()}")
            else:
                print("\nInvalid amount!")

        elif choice == 4:
            old_pin = int(input("Enter your old PIN: "))
            new_pin = int(input("Enter your new PIN: "))
            if atm.change_pin(old_pin, new_pin):
                print("\nYour PIN has been changed successfully!")
            else:
                print("\nInvalid old PIN!")

        elif choice == 5:
            history = atm.get_transaction_history()
            if not history:
                print("\nNo transactions yet.")
            else:
                print("\nTransaction History:")
                for transaction in history:
                    print(f"{transaction[0]}: {transaction[1]}")

        elif choice == 6:
            print("\nThank you for using the ATM. Goodbye!")
            break

        else:
            print("\nInvalid option selected!")

# Run the ATM simulation
atm_simulation()